# 3.5 Importing Display XML

# Run on SRV1

PS C:\Foo> # 1.Importing the Server Manager Module
PS C:\Foo> Import-Module -Name ServerManager
WARNING: Module ServerManager is loaded in Windows PowerShell using 
WinPSCompatSession remoting session; please note that all input and 
output of commands from this module will be deserialized objects. 
If you want to load this module into PowerShell please use 
'Import-Module -SkipEditionCheck' syntax




PS C:\Foo> # 2. Checking a Windows Feature
PS C:\Foo> Get-WindowsFeature -Name Simple-TCPIP

Display Name     Name           Install State
------------     ----           -------------
                 Simple-TCPIP       Available






PS C:\Foo> # 3 Running this command in the compatibility session 
PS C:\Foo> $S = Get-PSSession -Name 'WinPSCompatSession'
PS C:\Foo> Invoke-Command -Session $S -ScriptBlock {
             Get-WindowsFeature -Name Simple-TCPIP }

Display Name     Name           Install State PSComputerName
------------     ----           ------------- --------------
                 Simple-TCPIP       Available localhost




PS C:\Foo> # 4. Running this command with formatting in the remote session
PS C:\Foo> Invoke-Command -Session $S -ScriptBlock {
             Get-WindowsFeature -Name Simple-TCPIP |
               Format-Table}

Display Name                  Name          Install State
------------                  ----          -------------
[ ] Simple TCP/IP Services    Simple-TCPIP      Available






# 5. Getting path to Windows PowerShell modules


PS C:\Foo> # 5. Getting path to Windows PowerShell modules
PS C:\Foo> $Paths = $env:PSModulePath -split ';'
PS C:\Foo> foreach ($Path in $Paths) {
             if ($Path -match 'system32') {$S32Path = $Path; break}
           }
PS C:\Foo> "System32 path: [$S32Path]"
System32 path: [C:\Windows\system32\WindowsPowerShell\v1.0\Modules]




PS C:\Foo> # 6. Displaying path to the format XML for Server Manager module
PS C:\Foo> $FXML = "$S32path/ServerManager"
PS C:\Foo> $FF = Get-ChildItem -Path $FXML\*.format.ps1xml
PS C:\Foo> "Format XML file: [$FF]"
Format XML file: [C:\Windows\system32\WindowsPowerShell\v1.0\Modules\ServerManager\Feature.format.ps1xml]





# 7. Updating the format XML


no output





PS C:\Foo> # 8.	Viewing the Windows Simple-TCPIP feature
PS C:\Foo> Get-WindowsFeature -Name Simple-TCPIP

Display Name                 Name            Install State
------------                 ----            -------------
[ ] Simple TCP/IP Services   Simple-TCPIP        Available






PS C:\Foo> # 9. Adding Simple-TCP Services
PS C:\Foo> Add-WindowsFeature -Name Simple-TCPIP
Success Restart Needed Exit Code   Feature Result
------- -------------- ---------   --------------
True    No             Success     {Simple TCP/IP Services



PS C:\Foo> # 10. Examining Simple-TCPIP feature
PS C:\Foo> Get-WindowsFeature -Name Simple-TCPIP

Display Name                Name           Install State
------------                ----           -------------
[X] Simple TCP/IP Services  Simple-TCPIP       Installed




# 11. Using the Simple TCPIP feature


no output


PS C:\Foo> # 12. Using the quote of the day service
PS C:\Foo> Telnet SRV1 qotd

"We want a few mad people now. See where the sane ones have landed us!"
 George Bernard Shaw (1856-1950)
 

