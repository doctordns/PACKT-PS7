# 3.1 - Exploring Compatibility  LOG
#
# Run on SRV1 after installing PowerShell 7



# 1. Ensuring PowerShell Remoting is fully enabled

NO OUTPUT



# 2. Get Session using endpoint for Windoze PowerShell 5.1



NO OUTPUT




# 3. Get Session using PowerShell 7.1 endpoint




NO OUTPUT




# 4. Defining a script block to view default module paths



No output






PS C:\Foo> # 5. Reviewing paths in Windows PowerShell 5.1
PS C:\Foo> Invoke-Command -ScriptBlock $SBMP -Session $SWP51

Name                           Value
----                           -----
SerializationVersion           1.1.0.1
PSEdition                      Desktop
BuildVersion                   10.0.20270.1000
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.20270.1000}
PSRemotingProtocolVersion      2.3
PSVersion                      5.1.20270.1000

C:\Users\Administrator.RESKIT\Documents\WindowsPowerShell\Modules
C:\Program Files\WindowsPowerShell\Modules
C:\Windows\system32\WindowsPowerShell\v1.0\Modules



PS C:\Foo> # 6. Reviewing paths in PowerShell 7.1
PS C:\Foo> Invoke-Command -ScriptBlock $SBMP -Session $SP71

Name                           Value
----                           -----
SerializationVersion           1.1.0.1
PSEdition                      Core
PSVersion                      7.1.1
GitCommitId                    7.1.1
WSManStackVersion              3.0
OS                             Microsoft Windows 10.0.20270
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0, 5.0, 5.1.10032.0, 6.0.0, 6.1.0, 6.2.0, 7.0.0, 7.1.1}
PSRemotingProtocolVersion      2.3
Platform                       Win32NT

C:\Users\Administrator.RESKIT\Documents\PowerShell\Modules
C:\Program Files\PowerShell\Modules
c:\program files\powershell\7\Modules
C:\Program Files\WindowsPowerShell\Modules
C:\Windows\system32\WindowsPowerShell\v1.0\Modules






# 7. Creating a script block to get commands



NO OUTPUT



PS C:\Foo> # 8. Discovering all 7.1 cmdlets
PS C:\Foo> $CMDS71 = Invoke-Command -ScriptBlock $SBC -Session $SP71 |
                Where-Object CommandType -eq 'Cmdlet'
PS C:\Foo> "Total commands available in PowerShell 7.1 [{0}]" -f $Cmds71.count
Total commands available in PowerShell  7.1 [668]




PS C:\Foo> # 9. Discovering all 5.1 cmdlets
PS C:\Foo> $CMDS51 = Invoke-Command -ScriptBlock $SBC -Session $SWP51 |
                        Where-Object CommandType -eq 'Cmdlet'
PS C:\Foo> "Total commands available in PowerShell 5.1 [{0}]" -f $Cmds51.count
Total commands available in PowerShell 5.1 [594]






# 10. Creating arrays of just cmdlet names


no OUTPUT

PS C:\Foo> # 11. Discover new cmdlets in PowerShell 7.1
PS C:\Foo> Compare-Object $Commands51 $Commands71  |
             Where-Object SideIndicator -match '^=>'

InputObject               SideIndicator
-----------               -------------
ConvertFrom-Markdown      =>
ConvertFrom-SddlString    =>
Format-Hex                =>
Get-Error                 =>
Get-FileHash              =>
Get-MarkdownOption        =>
Get-Uptime                =>
Get-Verb                  =>
Import-PowerShellDataFile =>
Join-String               =>
New-Guid                  =>
New-TemporaryFile         =>
Remove-Alias              =>
Remove-Service            =>
Set-MarkdownOption        =>
Show-Markdown             =>
Start-ThreadJob           =>
Test-Json                 =>




#  12. Creating a script block to check core modules

no OUTPUT




PS C:\Foo> # 13. View core modules in Windows PowerShell 5.1
PS C:\Foo> Invoke-Command -Session $SWP51 -ScriptBlock $CMSB 

    Directory: C:\Program Files\WindowsPowerShell\Modules

ModuleType Version    PreRelease Name                                PSEdition ExportedCommands                              PSComputerName
---------- -------    ---------- ----                                --------- ----------------                              --------------
Script     1.0.1                 Microsoft.PowerShell.Operation.Val… Desk      {Get-OperationValidation, Invoke-OperationVa… localhost

    Directory: C:\Windows\system32\WindowsPowerShell\v1.0\Modules

ModuleType Version    PreRelease Name                                PSEdition ExportedCommands                              PSComputerName
---------- -------    ---------- ----                                --------- ----------------                              --------------
Manifest   1.0.1.0               Microsoft.PowerShell.Archive        Desk      {Compress-Archive, Expand-Archive}            localhost
Manifest   3.0.0.0               Microsoft.PowerShell.Diagnostics    Core,Desk {Get-WinEvent, Get-Counter, Import-Counter, … localhost
Manifest   3.0.0.0               Microsoft.PowerShell.Host           Desk      {Stop-Transcript, Start-Transcript}           localhost
Manifest   1.0.0.0               Microsoft.PowerShell.LocalAccounts  Core,Desk {Get-LocalGroupMember, algm, Get-LocalUser, … localhost
Manifest   3.1.0.0               Microsoft.PowerShell.Management     Desk      {Remove-EventLog, Set-Service, Get-ComputerI… localhost
Script     1.0                   Microsoft.PowerShell.ODataUtils     Desk      Export-ODataEndpointProxy                     localhost
Manifest   3.0.0.0               Microsoft.PowerShell.Security       Desk      {Get-Credential, Get-ExecutionPolicy, Unprot… localhost
Manifest   3.1.0.0               Microsoft.PowerShell.Utility        Desk      {Get-PSCallStack, Update-TypeData, Add-Type,… localhost
9 modules found in 5.1.20270.1000





PS C:\Foo> # 14. View core modules in PowerShell 7.1
PS C:\Foo> Invoke-Command -Session $SP71 -ScriptBlock $CMSB

    Directory: C:\program files\powershell\7\Modules

ModuleType Version    PreRelease Name                                PSEdition ExportedCommands                                  PSComputerName
---------- -------    ---------- ----                                --------- ----------------                                  --------------
Manifest   1.2.5                 Microsoft.PowerShell.Archive        Desk      {Compress-Archive, Expand-Archive}                localhost
Manifest   7.0.0.0               Microsoft.PowerShell.Diagnostics    Core      {Get-WinEvent, Get-Counter, New-WinEvent}         localhost
Manifest   7.0.0.0               Microsoft.PowerShell.Host           Core      {Start-Transcript, Stop-Transcript}               localhost
Manifest   7.0.0.0               Microsoft.PowerShell.Management     Core      {Convert-Path, New-PSDrive, New-ItemProperty, Re… localhost
Manifest   7.0.0.0               Microsoft.PowerShell.Security       Core      {Test-FileCatalog, Unprotect-CmsMessage, Set-Exe… localhost
Manifest   7.0.0.0               Microsoft.PowerShell.Utility        Core      {Format-Custom, Write-Verbose, Disable-PSBreakpo… localhost

    Directory: C:\Program Files\WindowsPowerShell\Modules

ModuleType Version    PreRelease Name                                PSEdition ExportedCommands                                  PSComputerName
---------- -------    ---------- ----                                --------- ----------------                                  --------------
Script     1.0.1                 Microsoft.PowerShell.Operation.Val… Desk      {Invoke-OperationValidation, Get-OperationValida… localhost

    Directory: C:\Windows\system32\WindowsPowerShell\v1.0\Modules

ModuleType Version    PreRelease Name                                PSEdition ExportedCommands                                  PSComputerName
---------- -------    ---------- ----                                --------- ----------------                                  --------------
Manifest   3.0.0.0               Microsoft.PowerShell.Diagnostics    Core,Desk {Get-WinEvent, Get-Counter, New-WinEvent, Import… localhost
Manifest   1.0.0.0               Microsoft.PowerShell.LocalAccounts  Core,Desk {Add-LocalGroupMember, nlg, Enable-LocalUser, rl… localhost
9 modules found in 7.1.1



