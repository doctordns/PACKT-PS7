# Recipe 12.6 - Configuring Hyper-V Networking
#
# Run on HV1



# 1. Setting the PSDirect VM's NIC


no output



PS C:\Foo> # 2. Getting NIC details and any IP addresses from the PSDirect VM
PS C:\Foo> Get-VMNetworkAdapter -VMName PSDirect

Name            IsManagementOs VMName   SwitchName MacAddress   Status IPAddresses
----            -------------- ------   ---------- ----------   ------ -----------
Network Adapter False          PSDirect            00155D0AC900 {Ok}   {169.254.200.232, fe80::fca7:6a7:acfa:c8e8}





PS C:\Foo> # 3. Creating a credential then getting VM networking details
PS C:\Foo> $RKAn = 'localhost\Administrator'
PS C:\Foo> $PS = 'Pa$$w0rd'
PS C:\Foo> $RKP = ConvertTo-SecureString -String $PS -AsPlainText -Force
PS C:\Foo> $T = 'System.Management.Automation.PSCredential'
PS C:\Foo> $RKCred = New-Object -TypeName $T -ArgumentList $RKAn, $RKP
PS C:\Foo> $VMHT = @{
             VMName      = 'PSDirect'
             ScriptBlock = {Get-NetIPConfiguration | Format-Table }
             Credential  = $RKCred
           }
PS C:\Foo> Invoke-Command @VMHT
ComputerName    InterfaceAlias InterfaceIndex InterfaceDescription              CompartmentId NetAdapter
------------    -------------- -------------- --------------------              ------------- ----------
WIN-0TKMU3D2DFM Ethernet                    5 Microsoft Hyper-V Network Adapter             1 MSFT_NetAdapter (CreationClassName = "MSFT_NetAdapter", 
                                                                                              DeviceID = "{8EF33029-8B18-4FE6-B870-9AB1E1430AC2â€¦




PS C:\Foo> # 4. Creating a virtual switch on HV1
PS C:\Foo> $VSHT = @{
             Name           = 'External'
             NetAdapterName = 'Ethernet'
             Notes          = 'Created on HV1'
           }
PS C:\Foo> New-VMSwitch @VSHT

Name     SwitchType NetAdapterInterfaceDescription
----     ---------- ------------------------------
External External   Microsoft Hyper-V Network Adapter




# 5. Connecting the PSDirect VM's NIC to the External switch

no output




PS C:\Foo> # 6. Viewing VM networking information
PS C:\Foo> Get-VMNetworkAdapter -VMName PSDirect

Name            IsManagementOs VMName   SwitchName MacAddress   Status IPAddresses
----            -------------- ------   ---------- ----------   ------ -----------
Network Adapter False          PSDirect External   00155D0AC900 {Ok}   {10.10.10.150, fe80::fca7:6a7:acfa:c8e8}






PS C:\Foo> # 7. Observing the IP address in the PSDirect VM
PS C:\Foo> $NCHT = @{
             VMName      = 'PSDirect'
             ScriptBlock = {Get-NetIPConfiguration}
             Credential  = $RKCred
           }
PS C:\Foo> Invoke-Command @NCHT

InterfaceAlias       : Ethernet
InterfaceIndex       : 5
InterfaceDescription : Microsoft Hyper-V Network Adapter
NetAdapter.Status    : 
NetProfile.Name      : Reskit.Org
IPv4Address          : 10.10.10.150
IPv6DefaultGateway   :
IPv4DefaultGateway   : 10.10.10.254
DNSServer            : 10.10.10.11
                       10.10.10.10
PSComputerName       : PSDirect





PS C:\Foo> # 8. Viewing the hostname on PSDirect
PS C:\Foo> #    Reuse the hash table from step 6
PS C:\Foo> $NCHT.ScriptBlock = {hostname}
PS C:\Foo> Invoke-Command @NCHT
WIN-0TKMU3D2DFM




PS C:\Foo> # 9.  Changing the name of the host in the PSDirect VM
PS C:\Foo> $NCHT.ScriptBlock = {Rename-Computer -NewName Wolf -Force}
PS C:\Foo> Invoke-Command @NCHT
WARNING: The changes will take effect after you restart the computer WIN-0TKMU3D2DFM.




# 10. Rebooting and wait for the restarted POSDirect VM

no output



PS C:\Foo> # 11. Getting hostname of the PSDirect VM
PS C:\Foo> $NCHT.ScriptBlock = {HOSTNAME}
PS C:\Foo> Invoke-Command @NCHT
Wolf



