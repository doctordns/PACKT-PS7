# 8.5 - Using Script Block Logging

# Run on SRV1



# 1. Clearing PowerShell Core operational log


NO OUTPUT

# 2. Enabling script block logging for the current user



NO OUTPUT



PS C:\Foo> # 3.Examining the PowerShell Core event log for 4104 events
PS C:\Foo> Get-Winevent -LogName 'PowerShellCore/Operational' |
            Where-Object Id -eq 4104

   ProviderName: PowerShellCore

TimeCreated            Id LevelDisplayName Message
-----------            -- ---------------- -------
31/01/2021 12:02:44  4104 Warning          Creating Scriptblock text (1 of 1):â€¦



PS C:\Foo> # 4. Examining logged event details
PS C:\Foo> Get-Winevent -LogName 'PowerShellCore/Operational' |
             Where-Object Id -eq 4104  | 
               Select-Object -First 1 |
                 Format-List -Property ID, Logname, Message

Id      : 4104
LogName : PowerShellCore/Operational
Message : Creating Scriptblock text (1 of 1):
          # 1. Clear PowerShell Core operational log
          WevtUtil cl 'PowerShellCore/Operational'

          # 2. Enabling script block logging for current user
          $SBLPath = 'HKCU:\Software\Policies\Microsoft\PowerShellCore' +
                     '\ScriptBlockLogging'
          if (-not (Test-Path $SBLPath))  {
                  $null = New-Item $SBLPath -Force
              }
          Set-ItemProperty $SBLPath -Name EnableScriptBlockLogging -Value '1'

          ScriptBlock ID: ccdf2e53-e827-4f40-aeb0-3af47414b2d1
          Path: 



# 5. Creating another script block that is not logged



NO OUTPUT




PS C:\Foo> # 6. Comparing the events before and after you invoke the command
PS C:\Foo> "Before:  $($Before.Count) events"
PS C:\Foo> "After :  $($After.Count) events"
Before:  1 events
After :  1 events






# 7. Removing registry policy entry


no output