# 9.3 - Exploring Providers

# Run on SRV1



PS C:\Foo> # 1. Getting providers
PS C:\Foo> Get-PSProvider

Name          Capabilities                         Drives
----          ------------                         ------
Registry      ShouldProcess                        {HKLM, HKCU}
Alias         ShouldProcess                        {Alias}
Environment   ShouldProcess                        {Env}
FileSystem    Filter, ShouldProcess, Credentials   {C, F, S, T, X, Y, Z, Temp, A, D}
Function      ShouldProcess                        {Function}
Variable      ShouldProcess                        {Variable}
WSMan         Credentials                          {WSMan}




PS C:\Foo> # 2. Getting registry drives
PS C:\Foo> Get-PSDrive | Where-Object Provider -match 'registry'

Name Used (GB)  Free (GB) Provider  Root                CurrentLocation
---- ---------  --------- --------  ----                --------------- 
HKCU                      Registry  HKEY_CURRENT_USER
HKLM                      Registry  HKEY_LOCAL_MACHINE



PS C:\Foo> # 3. Loooking at a registry key
PS C:\Foo> $Path = 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion'
PS C:\Foo> Get-Item -Path $Path

    Hive: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT

Name             Property
----             --------
CurrentVersion   SystemRoot                : C:\WINDOWS
                 BaseBuildRevisionNumber   : 1
                 BuildBranch               : fe_release
                 BuildGUID                 : ffffffff-ffff-ffff-ffff-ffffffffffff
                 BuildLab                  : 20282.fe_release.210111-1506
                 BuildLabEx                : 20282.1.amd64fre.fe_release.210111-1506
                 CompositionEditionID      : ServerDatacenter
                 CurrentBuild              : 20282
                 CurrentBuildNumber        : 20282
                 CurrentMajorVersionNumber : 10
                 CurrentMinorVersionNumber : 0
                 CurrentType               : Multiprocessor Free
                 CurrentVersion            : 6.3
                 EditionID                 : ServerDatacenter
                 EditionSubManufacturer    :
                 EditionSubstring          :
                 EditionSubVersion         :
                 InstallationType          : Server
                 InstallDate               : 1610817552
                 ProductName               : Windows Server 2019 Datacenter
                 ReleaseId                 : 2004
                 SoftwareType              : System
                 UBR                       : 1
                 PathName                  : C:\Windows
                 PendingInstall            : 0
                 ProductId                 : 00133-32500-02427-AA928
                 DigitalProductId          : {164, 0, 0, 0, 3, 0, 0, 0, 48, 48, 49, 51, 51, 45, 51...  
                 DigitalProductId4         : {248, 4, 0, 0, 4, 0, 0, 0, 48, 0, 51, 0, 54, 0, 49, 0...
                 RegisteredOrganization    : Reskit.Org
                 RegisteredOwner           : Packt book readers
                 InstallTime               : 132552911528167249






PS C:\Foo> # 4. Getting Registered Owner
PS C:\Foo> (Get-ItemProperty -Path $Path -Name RegisteredOwner).RegisteredOwner
Packt book readers





PS C:\Foo> # 5. Counting aliases in the Alias: drive
PS C:\Foo> Get-Item Alias:* | Measure-Object

Count             : 142
Average           : 
Sum               : 
Maximum           : 
Minimum           : 
StandardDeviation : 
Property          : 




PS C:\Foo> # 6. Finding aliases for Remove-Item
PS C:\Foo> Get-ChildItem Alias:* | 
             Where-Object ResolvedCommand -match 'Remove-Item$'

CommandType     Name                   Version    Source
-----------     ----                   -------    ------
Alias           ri -> Remove-Item
Alias           rm -> Remove-Item
Alias           rmdir -> Remove-Item
Alias           del -> Remove-Item
Alias           erase -> Remove-Item
Alias           rd -> Remove-Item





PS C:\Foo> # 7. Counting environment variables on SRV1
PS C:\Foo> Get-Item ENV:* | Measure-Object

Count             : 48
Average           : 
Sum               :
Maximum           : 
Minimum           :
StandardDeviation :
Property          :



PS C:\Foo> # 8. Displaying Windows installation folder
PS C:\Foo> "Windows installation folder is [$env:windir]"
Windows installation folder is [C:\WINDOWS]



PS C:\Foo> # 9. Checking on FileStore provider drives on SRV1
PS C:\Foo> Get-PSProvider -PSProvider FileSystem | 
             Select-Object -ExpandProperty Drives |
               Sort-Object -Property Name

Name   Used (GB)  Free (GB) Provider     Root                                  CurrentLocation
----   ---------  --------- --------     ----                                  --------------- 
A                           FileSystem   A:\
C          17.14     110.37 FileSystem   C:\                                               Foo
D           4.38       0.00 FileSystem   D:\
F           0.09      63.89 FileSystem   F:\
S           0.07      31.93 FileSystem   S:\
T           0.00      31.98 FileSystem   T:\
Temp       17.14     110.37 FileSystem   C:\Users\Administrator.RESKIT\AppD…
X           0.00      15.00 FileSystem   X:\
Y           0.00      14.98 FileSystem   Y:\
Z           1.07      17.87 FileSystem   Z:\





PS C:\Foo> # 10. Getting home Drive for FileSystem provider
PS C:\Foo> $HF = Get-PSProvider -PSProvider FileSystem |
             Select-Object -ExpandProperty Home
PS C:\Foo> "Home Folder for SRV1 is [$HF]"
Home Folder for SRV1 is [C:\Foo]



PS C:\Foo> # 11. Checking Function drive
PS C:\Foo> Get-Module | Remove-Module -WarningAction SilentlyContinue
PS C:\Foo> $Functions = Get-ChildItem -Path Function:
PS C:\Foo> "Functions available [$($Functions.Count)]"
Functions available [35]




# 12. Creating a new function



no output




PS C:\Foo> # 13. Checking Function drive
PS C:\Foo> $Functions2 = Get-ChildItem -Path Function:
PS C:\Foo> "Functions now available [$($Functions2.Count)]"
Functions now available [36]



PS C:\Foo> # 14. Viewing Function definition
PS C:\Foo> Get-Item Function:\Get-HelloWorld | Format-List *

PSPath              : Microsoft.PowerShell.Core\Function::Get-HelloWorld
PSDrive             : Function
PSProvider          : Microsoft.PowerShell.Core\Function
PSIsContainer       : False
HelpUri             : 
ScriptBlock         : 'Hello World'
CmdletBinding       : False
DefaultParameterSet :
Definition          : 'Hello World'
Options             : None
Description         :
Verb                : Get
Noun                : HelloWorld
HelpFile            :
OutputType          : {}
Name                : Get-HelloWorld
CommandType         : Function
Source              :
Version             :
Visibility          : Public
ModuleName          :
Module              :
RemotingCapability  : PowerShell
Parameters          : {}
ParameterSets       : {}



PS C:\Foo> # 15. Counting defined variables
PS C:\Foo> $Variables = Get-ChildItem -Path Variable:
PS C:\Foo> "Variables defined [$($Variables.count)]"
Variables defined [68]





PS C:\Foo> # 16. Checking on variables
PS C:\Foo> Get-Item Variable:Function*

Name        Value
----        -----
Functions2  {A:, B:, C:, cd.., cd\, D:, E:, F:, G:, Get-HelloWorld… 
Functions   {A:, B:, C:, cd.., cd\, D:, E:, F:, G:, Get-HelpDetailed…



PS C:\Foo> # 17. Getting trusted publisher certs for the current user
PS C:\Foo> Get-ChildItem -Path Cert:\CurrentUser\TrustedPublisher

   PSParentPath: Microsoft.PowerShell.Security\Certificate::CurrentUser\TrustedPublisher

Thumbprint                                Subject              EnhancedKeyUsageList
----------                                -------              --------------------
2485A7AFA98E178CB8F30C9838346B514AEA4769  CN=Microsoft Corpor… {Microsoft Publisher, Code Signing}





PS C:\Foo> # 18. Examining ports in use by WinRM
PS C:\Foo> Get-ChildItem -Path WSMan:\localhost\Client\DefaultPorts

   WSManConfig: Microsoft.WSMan.Management\WSMan::localhost\Client\DefaultPorts

Type            Name                           SourceOfValue   Value
----            ----                           -------------   -----
System.String   HTTP                                           5985
System.String   HTTPS                                          5986

PS C:\Foo> Get-ChildItem -Path WSMan:\localhost\Service\DefaultPorts

   WSManConfig: Microsoft.WSMan.Management\WSMan::localhost\Service\DefaultPorts

Type            Name                           SourceOfValue   Value
----            ----                           -------------   -----
System.String   HTTP                                           5985
System.String   HTTPS                                          5986




# 19. Setting Trusted Hosts


no output






# 20. Installing SHIPS and CimPSDrive modules



no output






PS C:\Foo> # 21. Importing the CimPSDrive module and creating a drive
PS C:\Foo> Import-Module -Name CimPSDrive
PS C:\Foo> New-PSDrive -Name CIM -PSProvider SHiPS -Root CIMPSDrive#CMRoot

Name  Used (GB)   Free (GB) Provider   Root               CurrentLocation
----  ---------   --------- --------   ----               --------------- 
CIM                         SHiPS      CIMPSDrive#CMRoot





PS C:\Foo> # 22. Examining BIOS
PS C:\Foo> Get-ChildItem CIM:\Localhost\CIMV2\Win32_Bios

SMBIOSBIOSVersion : 090008 
Manufacturer      : American Megatrends Inc.
Name              : BIOS Date: 12/07/18 15:46:29  Ver: 09.00.08
SerialNumber      : 4148-1377-3576-8329-5489-6416-80
Version           : VRTUAL - 12001807
PSComputerName    : localhost


