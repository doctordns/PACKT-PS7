# 14.2 Using PS Script Analyzer   LOG

# Run on SRV1



PS C:\Foo> # 1. Discovering the PS Script Analyzer module
PS C:\Foo> Find-Module -Name PSScriptAnalyzer |
             Format-List Name, Type, Desc*, Author, Company*, *Date, *URI*

Name          : PSScriptAnalyzer
Type          : Module
Description   : PSScriptAnalyzer provides script analysis and checks for potential 
                code defects in the scripts by applying a group of built-in or 
                customized rules on the scripts being analyzed.
Author        : Microsoft Corporation
CompanyName   : {PowerShellTeam, JamesTruher-MSFT}
PublishedDate : 28/07/2020 16:41:52
InstalledDate :
UpdatedDate   :
LicenseUri    : https://github.com/PowerShell/PSScriptAnalyzer/blob/master/LICENSE
ProjectUri    : https://github.com/PowerShell/PSScriptAnalyzer
IconUri       : https://raw.githubusercontent.com/powershell/psscriptanalyzer/master/logo.png




# 2. Installing the script analyzer module



no output



PS C:\Foo> # 3. Discovering the commands in this module
PS C:\Foo> Get-Command -Module PSScriptAnalyzer

CommandType   Name                     Version  Source
-----------   ----                     -------  ------
Cmdlet        Get-ScriptAnalyzerRule   1.19.1   PSScriptAnalyzer
Cmdlet        Invoke-Formatter         1.19.1   PSScriptAnalyzer
Cmdlet        Invoke-ScriptAnalyzer    1.19.1   PSScriptAnalyzer





PS C:\Foo> # 4. Discovering analyzer rules
PS C:\Foo> Get-ScriptAnalyzerRule |
             Group-Object -Property Severity

Count Name          Group
----- ----          -----
   11 Information   {PSAvoidUsingPositionalParameters, PSAvoidTrailingWhitespace, PSAvoidUsin…
   46 Warning       {PSAlignAssignmentStatement, PSAvoidUsingCmdletAliases, PSAvoidAssignment…
    7 Error         {PSAvoidUsingUsernameAndPasswordParams, PSAvoidUsingComputerNameHardcoded…



PS C:\Foo> # 5. Examining a rule
PS C:\Foo> Get-ScriptAnalyzerRule | 
             Select-Object -First 1 |
               Format-List

Name        : 
Severity    : Warning
Description : Line up assignment statements such that the assignment operator are aligned.
SourceName  : PS




# 6. Creating a script file with issues


no output



PS C:\Foo> # 7. Checking the newly created file
PS C:\Foo> Get-ChildItem C:\Foo\Bad.ps1

    Directory: C:\Foo

Mode            LastWriteTime   Length Name
----            -------------   ------ ----
-a---     11/04/2021    15:34      567 Bad.ps1




PS C:\Foo> # 8. Analyzing Bad.ps1
PS C:\Foo> Invoke-ScriptAnalyzer -Path C:\Foo\Bad.ps1 |
             Sort-Object -Property Line

RuleName                             Severity     ScriptName Line  Message
--------                             --------     ---------- ----  -------
PSAvoidUsingCmdletAliases            Warning      Bad.ps1    6     'gps' is an alias of 'Get-Process'. Alias can 
                                                                   introduce possible problems and make scripts hard
                                                                   to maintain. Pleaseconsider changing alias to its
                                                                   full content.
PSUseDeclaredVarsMoreThanAssignments Warning      Bad.ps1    6     The variable 'Procs' is assigned but never used.
PSUseDeclaredVarsMoreThanAssignments Warning      Bad.ps1    9     The variable 'Services' is assigned but never used.
PSAvoidOverwritingBuiltInCmdlets     Warning      Bad.ps1    15    'Get-ChildItem' is a cmdlet that is included with
                                                                   PowerShell (version core-6.1.0-windows) whose 
                                                                   definition should not be overridden
PSAvoidUsingComputerNameHardcoded    Error        Bad.ps1    18    The ComputerName parameter of cmdlet 'Test-Connection'
                                                                   is hardcoded. This will expose sensitive information
                                                                   about the system if the script is shared.
PSAvoidTrailingWhitespace            Information  Bad.ps1    21    Line has trailing whitespace
PSUseDeclaredVarsMoreThanAssignments Warning      Bad.ps1    21    The variable 'foobar' is assigned but never used.
PSAvoidGlobalVars                    Warning      Bad.ps1    24    Found global variable 'Global:foo'.




# 9. Defining a function to format more nicely


no output



# 10. Defining formatting settings



no output



PS:\Foo> # 11. Invoking formatter
PS:\Foo> Invoke-Formatter -ScriptDefinition $Script1 -Settings $Settings
function foo {
    "hello!"
    Get-ChildItem -Path C:\FOO
}


PS:\Foo>  # 12. Changing settings and reformatting
PS:\Foo> $Settings.Rules.PSPlaceOpenBrace.OnSameLine = $False
PS:\Foo> Invoke-Formatter -ScriptDefinition $Script1 -Settings $Settings
function foo
{
    "hello!"
    Get-ChildItem -Path C:\FOO
}


 

