# 2.6 - Exploring Error view and Get-Error
#
# Run on SRV1 after loading PS 7



# 1. Create a simple script




NO OUTPUT


PS C:\Foo> # 2. Running the script and see the default error view
PS C:\Foo> & $SCRIPTFILENAME
RuntimeException: C:\Foo\ZeroDivError.ps1:2:3
Line |
   2 |    42/0
     |    ~~~~
     | Attempted to divide by zero.




PS C:\Foo> # 3. Running the same line from the console
PS C:\Foo> 42/0
RuntimeException: Attempted to divide by zero.



PS C:\Foo> # 4. Viewing $ErrorView variable
PS C:\Foo> $ErrorView
ConciseView


PS C:\Foo> # 5. Viewing Potential values of Error View
PS C:\Foo> $Type = $ErrorView.GetType().FullName
PS C:\Foo> [System.Enum]::GetNames($Type)
NormalView
CategoryView
ConciseView




PS C:\Foo> # 6. Setting Value to Normal View and re-create the error
PS C:\Foo> $ErrorView = 'NormalView'
PS C:\Foo> & $SCRIPTFILENAME
Attempted to divide by zero.
At C:\Foo\ZeroDivError.ps1:2 char:3
+   42/0
+   ~~~~
+ CategoryInfo          : NotSpecified: (:) [], RuntimeException
+ FullyQualifiedErrorId : RuntimeException




PS C:\Foo> # 7. Setting value to Category View and re-create the error
PS C:\Foo> $ErrorView = 'CategoryView'
PS C:\Foo> & $SCRIPTFILENAME
NotSpecified: (:) [], RuntimeException



# 8. Setting back to ConciseView (default)



no OUTPUT

