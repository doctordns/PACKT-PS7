# 9.1 Exploring WMI namespaces
#
# Run on SRV1, with SRV2, DC1 on line

PS C:\Foo> # 1. Viewing WMI classes in the root namespace
PS C:\Foo> Get-CimClass -Namespace 'ROOT' | 
             Select-Object -First 10

   NameSpace: ROOT

CimClassName                        CimClassMethods      CimClassProperties
------------                        ---------------      ------------------
__SystemClass                       {}                   {}
__thisNAMESPACE                     {}                   {SECURITY_DESCRIPTOR}
__CacheControl                      {}                   {}
__EventConsumerProviderCacheControl {}                   {ClearAfter}
__EventProviderCacheControl         {}                   {ClearAfter}
__EventSinkCacheControl             {}                   {ClearAfter}
__ObjectProviderCacheControl        {}                   {ClearAfter}
__PropertyProviderCacheControl      {}                   {ClearAfter}
__NAMESPACE                         {}                   {Name}
__ArbitratorConfiguration           {}                   {OutstandingTasksPerUser, OutstandingTasksTotal, Perâ€¦




PS C:\Foo> # 2. Viewing the __NAMESPACE class in ROOT
PS C:\Foo> Get-CimInstance -Namespace 'ROOT' -ClassName __NAMESPACE |
             Sort-Object -Property Name

Name             PSComputerName
----             --------------
AccessLogging
Appv
CIMV2
Cli
DEFAULT
directory
Hardware
Interop
InventoryLogging
Microsoft
msdtc
MSPS
PEH
Policy
RSOP
SECURITY
ServiceModel
StandardCimv2
subscription
WMI




PS C:\Foo> # 3. Getting and counting classes in ROOT\CIMV2
PS C:\Foo> $Classes = Get-CimClass -Namespace 'ROOT\CIMV2'  
PS C:\Foo> "There are $($Classes.Count) classes in ROOT\CIMV2"
There are 1202 classes in ROOT\CIMV2



PS C:\Foo> # 4. Discovering all the namespaces on SRV1
PS C:\Foo> Function Get-WMINamespaceEnum {
             [CmdletBinding()]
             Param($NS)
             Write-Output $NS
             Get-CimInstance "__Namespace" -Namespace $NS -ErrorAction SilentlyContinue | 
             ForEach-Object { Get-WMINamespaceEnum "$ns\$($_.name)"   }
           }  # End of function
PS C:\Foo> $Namespaces = Get-WMINamespaceEnum 'ROOT' | 
             Sort-Object
PS C:\Foo> "There are $($Namespaces.Count) WMI namespaces on SRV1"
There are 128 WMI namespaces on SRV1





PS C:\Foo> # 5. Viewing first 25 namespaces on SRV1
PS C:\Foo> $Namespaces |
             Select-Object -First 25
ROOT
ROOT\AccessLogging
ROOT\Appv
ROOT\CIMV2
ROOT\CIMV2\mdm
ROOT\CIMV2\mdm\dmmap
ROOT\CIMV2\mdm\MS_409
ROOT\CIMV2\ms_409
ROOT\CIMV2\power
ROOT\CIMV2\power\ms_409
ROOT\CIMV2\Security
ROOT\CIMV2\Security\MicrosoftTpm
ROOT\CIMV2\Security\MicrosoftVolumeEncryption
ROOT\CIMV2\TerminalServices
ROOT\CIMV2\TerminalServices\ms_409
ROOT\Cli
ROOT\Cli\MS_409
ROOT\DEFAULT
ROOT\DEFAULT\ms_409
ROOT\directory
ROOT\directory\LDAP
ROOT\directory\LDAP\ms_409
ROOT\Hardware
ROOT\Hardware\ms_409
ROOT\Interop


# 6. Creating a script block to count namespaces and classes


no Output





PS C:\Foo> # 7. Running the script block locally on SRV1
PS C:\Foo> Invoke-Command -ComputerName SRV1 -ScriptBlock $SB
There are 128 WMI namespaces on SRV1
There are 17384 classes on SRV1





PS C:\Foo> # 8. Running the script block  the script block on SRV2
PS C:\Foo> Invoke-Command -ComputerName SRV2 -ScriptBlock $SB
There are 99 WMI namespaces on SRV2
There are 13679 classes on SRV2





PS C:\Foo> # 9. Running the script block  the script block on DC1
PS C:\Foo> Invoke-Command -ComputerName DC1 -ScriptBlock $SB
There are 107 WMI namespaces on DC1
There are 15521 classes on DC1




