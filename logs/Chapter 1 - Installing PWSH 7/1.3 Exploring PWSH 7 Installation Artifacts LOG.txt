# 1.3 Exploring PWSH 7 Installation Artifacts
#
# Run in PWSH 7 Console

PS C:\Foo> # 1. Check Version Number
PS C:\Foo> $PSVersionTable

Name                           Value
----                           -----
PSVersion                      7.0.3
PSEdition                      Core
GitCommitId                    7.0.3
OS                             Microsoft Windows 10.0.20211
Platform                       Win32NT
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
WSManStackVersion              3.0



PS C:\Foo> # 2. Examine the installation folder
PS C:\Foo> Get-Childitem -Path $env:ProgramFiles\PowerShell\7 -Recurse |
             Measure-Object -Property Length -Sum

Count             : 987
Average           :
Sum               : 234621818
Maximum           :
Minimum           :
StandardDeviation :
Property          : Length





PS C:\Foo> # 3. Look at PowerShell Configuration JSON file
PS C:\Foo> Get-ChildItem -Path $env:ProgramFiles\PowerShell\7\powershell*.json |
             Get-Content
{
    "WindowsPowerShellCompatibilityModuleDenyList":  [
                                "PSScheduledJob",
                                "BestPractices",
                                "UpdateServices"
                                                     ],
    "Microsoft.PowerShell:ExecutionPolicy":  "RemoteSigned"


}





PS C:\Foo> # 4. Check Execution Policy
PS C:\Foo> Get-ExecutionPolicy
RemoteSigned




PS C:\Foo> # 5. View Module folders
PS C:\Foo> #  View module folders for autoload
PS C:\Foo> $I = 0
PS C:\Foo> $ModPath = $env:PSModulePath -split ';'
PS C:\Foo> $ModPath |
             Foreach-Object {
               "[{0:N0}]   {1}" -f $I++, $_
             }
[0]   C:\Users\Administrator\Documents\PowerShell\Modules
[1]   C:\Program Files\PowerShell\Modules
[2]   c:\program files\powershell\7\Modules
[3]   C:\Program Files\WindowsPowerShell\Modules
[4]   C:\Windows\system32\WindowsPowerShell\v1.0\Modules


PS C:\Foo> # 6. View the Modules




PS C:\Users\Administrator> # 6. View the Modules
PS C:\Users\Administrator> $TotalCommands = 0
PS C:\Users\Administrator> $TotalModules  = 0
PS C:\Users\Administrator> Foreach ($Path in $ModPath){
>>   Try { $Modules = Get-ChildItem -Path $Path -Directory -ErrorAction Stop
>>         "Checking Module Path:  [$Path]"
>>   }
>>   Catch [System.Management.Automation.ItemNotFoundException] {
>>     "Module path [$path] DOES NOT EXIST ON $(hostname)"
>>   }
>>   Foreach ($Module in $Modules) {
>>     # "Module [$($module.name)] - Commands: [$($Cmds.Count)]"
>>     $TotalCommands += $Cmds.Count
>>     $TotalModules ++
>>   }
>>   ""
>> }
Module path [C:\Users\Administrator\Documents\PowerShell\Modules] DOES NOT EXIST ON SRV1
Module path [C:\Program Files\PowerShell\Modules] DOES NOT EXIST ON SRV1
Checking Module Path:  [c:\program files\powershell\7\Modules]
Checking Module Path:  [C:\Program Files\WindowsPowerShell\Modules]
Checking Module Path:  [C:\Windows\system32\WindowsPowerShell\v1.0\Modules]


PS C:\Users\Administrator> # 7. View totals of command and modules
PS C:\Users\Administrator> Get-Module * | Measure-Object

Count             : 88
Average           :
Sum               :
Maximum           :
Minimum           :
StandardDeviation :
Property          :


PS C:\Users\Administrator> "{0} commands in {1} modules" -f $TotalCommands, $TotalModules
277 commands in 277 modules
PS C:\Users\Administrator>